name: MDC AWS Org Onboarding

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write    # Needed for AWS OIDC auth
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Authenticate to Azure
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          allow-no-subscriptions: true

      # Fetch MDC CloudFormation StackSet template URL
      - name: Fetch MDC CloudFormation Template URL
        id: fetch_template
        run: |
          TEMPLATE_URL=$(az rest --method post \
            --url "https://management.azure.com/subscriptions/${AZURE_SUBSCRIPTION_ID}/providers/Microsoft.Security/defenderForCloudAwsOffering/organizationCloudFormationTemplate?api-version=2023-10-01-preview" \
            --query 'templateUrl' -o tsv)
          echo "template_url=$TEMPLATE_URL" >> $GITHUB_OUTPUT

      # Configure AWS credentials via OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var="template_url=${{ steps.fetch_template.outputs.template_url }}"

      # OPTIONAL â€” Create MDC connector in Azure
      - name: Create MDC Connector (Azure)
        run: |
          az rest --method put \
            --url "https://management.azure.com/subscriptions/${AZURE_SUBSCRIPTION_ID}/resourceGroups/<your-rg>/providers/Microsoft.Security/multiCloudConnectors/awsOrgConnector?api-version=2023-10-01-preview" \
            --body '{
              "location": "centralus",
              "properties": {
                "cloudName": "AWS",
                "environmentType": "awsOrganization",
                "hierarchyIdentifier": "<your_aws_organization_id>",
                "authenticationDetails": {
                  "authenticationType": "awsAssumeRole",
                  "roleArn": "arn:aws:iam::<management_account_id>:role/DefenderForCloud-Connector-Role"
                }
              }
            }'
